function MainCtrl(){var e=this;e.getNik="",e.activeButton=!1,e.nickname="",e.listener=function(n){"http://localhost:9000"==n.origin&&("nik"==n.data.type?e.getNik=n.data.nik:e.show(n.data,e.nickname,"get"))},window.addEventListener?window.addEventListener("message",e.listener):window.attachEvent("onmessage",e.listener),e.changeButton=function(){""!=e.message?e.activeButton=!0:e.activeButton=!1},e.sendNik=function(){var n=window.parent,a={type:"nik",nik:e.saveText(e.nickname)};n.postMessage(a,"http://localhost:9000")},e.changeNik=function(e,n,a){var t=new RegExp("(^|\\s)"+e+"(?=\\s|[,.?!]|$)","gi"),s=new RegExp("(^|\\s)"+n+"(?=\\s|[,.?!]|$)","gi");return""==e?a.replace(s,"<span class=nikGet>$&</span>"):a.replace(s,"<span class=nikGet>$&</span>").replace(t,"<span class=nikSend>$&</span>")},e.showSmiles=function(e){var n={":)":"smile",":'(":"cry",":(":"sad",";)":"wink",":*":"kiss"};return e.replace(/(:\))|(:\()|(:'\()|(;\))|(:\*)/g,function(e){return'<div class="smilies '+n[e]+'"></div>'})},e.saveText=function(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},e.show=function(n,a,t){var s=angular.element("<div>"),i=angular.element(document.querySelector("#text"));if("get"==t){s.addClass("alert get");var r=e.changeNik(n.nik,a,n.text)}else{s.addClass("alert send");var r=e.changeNik(a,n.nik,n.text)}r=e.showSmiles(r);var l=angular.element('<span class="nik">'+n.nik+": </span>"+r);s.append(l),i.append(s)},e.send=function(n){var a=window.parent;if(""!=e.message){var t={type:"message",nik:e.saveText(e.nickname),text:e.saveText(e.message)};e.show(t,n,"send"),a.postMessage(t,"http://localhost:9000"),e.message="",e.activeButton=!1}}}var app=angular.module("app",[]);app.controller("MainCtrl",MainCtrl);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
